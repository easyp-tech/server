version: v1
build:
  excludes: [
    # api/session/v1/ # For ignoring some proto files for generating.
  ]
lint:
  # We shouldn't use group lint like 'default' or 'basic'
  # if we want flexible settings for linter.
  use: [
    # From 'minimal' category.
    DIRECTORY_SAME_PACKAGE,
    PACKAGE_DEFINED,
    PACKAGE_DIRECTORY_MATCH,
    PACKAGE_SAME_DIRECTORY,
    # From 'basic' category.
    ENUM_PASCAL_CASE,
    ENUM_VALUE_UPPER_SNAKE_CASE,
    FIELD_LOWER_SNAKE_CASE,
    MESSAGE_PASCAL_CASE,
    ONEOF_LOWER_SNAKE_CASE,
    PACKAGE_LOWER_SNAKE_CASE,
    RPC_PASCAL_CASE,
    SERVICE_PASCAL_CASE,
    # PACKAGE_SAME_CSHARP_NAMESPACE, # We don't use C# now.
    PACKAGE_SAME_GO_PACKAGE,
    # PACKAGE_SAME_JAVA_MULTIPLE_FILES, # We don't use JAVA now.
    # PACKAGE_SAME_JAVA_PACKAGE, # We don't use JAVA now.
    # PACKAGE_SAME_PHP_NAMESPACE, # We don't use PHP now.
    # PACKAGE_SAME_RUBY_PACKAGE, # We don't use RUBY now.
    # PACKAGE_SAME_SWIFT_PREFIX, # We don't use SWIFT now.
    ENUM_FIRST_VALUE_ZERO,
    ENUM_NO_ALLOW_ALIAS,
    IMPORT_NO_WEAK,
    IMPORT_NO_PUBLIC,
    # From 'basic' category.
    ENUM_VALUE_PREFIX,
    ENUM_ZERO_VALUE_SUFFIX,
    FILE_LOWER_SNAKE_CASE,
    RPC_REQUEST_STANDARD_NAME,
    RPC_RESPONSE_STANDARD_NAME,
    RPC_REQUEST_RESPONSE_UNIQUE,
    PACKAGE_VERSION_SUFFIX,
    # From 'comments' category.
    COMMENT_ENUM,
    COMMENT_ENUM_VALUE,
    # COMMENT_FIELD, # Because we have a validator, so field has docs anyway.
    # COMMENT_MESSAGE, # Same moment.
    COMMENT_ONEOF,
    COMMENT_RPC,
    COMMENT_SERVICE,
    # This category not interesting for us, because we have some logic,
    # which should use stream.
    # And we don't use Twirp :).
    # From 'unary_rpc' category.
    # RPC_NO_CLIENT_STREAMING,
    # RPC_NO_SERVER_STREAMING,
  ]
  except: [
    # ENUM_NO_ALLOW_ALIAS # If you want to except some lint, you should add to this array.
  ]
  ignore: [
    # api/session/v1/ # For ignoring some proto files for linting.
  ]
  ignore_only:
  # DEFAULT: [
  # api/session/v1/ # For ignoring specific linter for specific directories/files.
  # ]

  # If you want to use comment-driven ignores in buf you should set true.
  # But I shouldn't recommend using this.
  # https://docs.buf.build/lint/configuration#ignore_only
  allow_comment_ignores: false

  # Because '_NONE' shorted and usefully than '_UNSPECIFIED'.
  enum_zero_value_suffix: _NONE

  # One of the single most important rules to enforce in modern Protobuf development
  # is to have a unique request and response message for every RPC.
  # You should have unique request and response for every RPC handler.
  rpc_allow_same_request_response: false
  rpc_allow_google_protobuf_empty_requests: false
  rpc_allow_google_protobuf_empty_responses: false

  # Because API shorted and usefully than 'Service'.
  service_suffix: API

breaking:
  use: [
    FILE, # For std break checking.
    WIRE_JSON, # Because we're using gRPC-Gateway by HTTP.
  ]
  except: [
    # RPC_NO_DELETE # If you want to except some breaking change checker, you should add to this array.
  ]
  ignore: [
    # api/session/v1/ # For ignoring some proto files for breaking change checking.
  ]
  ignore_only:
  # FILE: [
  #  api/session/v1/ # For ignoring specific breaking change checkers for specific directories/files.
  # ]

  # If you want to make breaking changes for some proto API,
  # you should use unstable name for package.
  #  Example:
  #    foo.bar.baz.v1alpha1
  #    foo.bar.v1beta1
  #    bar.v1test
  ignore_unstable_packages: true
